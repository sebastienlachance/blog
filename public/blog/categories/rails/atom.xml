<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rails | Sebastien Lachance]]></title>
  <link href="http://sebastienlachance.com/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://sebastienlachance.com/"/>
  <updated>2012-05-10T09:39:35-04:00</updated>
  <id>http://sebastienlachance.com/</id>
  <author>
    <name><![CDATA[Sebastien Lachance]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails Assets Pipeline and missing assets]]></title>
    <link href="http://sebastienlachance.com/blog/rails-assets-pipeline-and-missing-assets/"/>
    <updated>2012-05-10T10:00:00-04:00</updated>
    <id>http://sebastienlachance.com/blog/rails-assets-pipeline-and-missing-assets</id>
    <content type="html"><![CDATA[<p>I moved the entire <a href="http://www.guidedescommercesdebeauce.com">Guide des Commerces</a> from Rails 3.0.10 to Rails 3.2.3. I have to admit it, I was afraid of the assets pipeline and my first deployment attempt resulted in a lost afternoon and a bad case of stress. I had to revert back and lose some customer data (just my associate data).</p>

<p>The problem was that I tried to use the assets pipeline for half the application and let everything in the public folder for the second half (admin part). I'm pretty sure it is possible.</p>

<p>Now everything is moved and I am actually quite happy. One css and one js per page is finally a dream came true.</p>

<p>Anyway, what I really wanted to talk here is about one of the problems I had. When calling the assets precompile rake task, one compiled css file was missing. Like one of the manifest wasn't read or executed.</p>

<p>When you have multiple manifest files (not called application.css or application.js), you actually have to tell which additionnal one to precompile.</p>

<p><code>ruby config/application.rb
config.assets.precompile += ['administration.js', 'administration.css' ]
</code></p>

<h2>One gotcha with scss manifest:</h2>

<p><strong>If you are using scss files as manifests</strong>, you need to use the compiled version.</p>

<p>Like this:</p>

<p><code>ruby config/application.rb
config.assets.precompile += ['application.css' ]  # this will not work, but no error will be thrown
</code></p>

<p>Instead of:</p>

<p><code>ruby config/application.rb
 config.assets.precompile += ['application.css.scss' ]  # this will not work, but no error will be thrown
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning Rails : assert_valid_keys]]></title>
    <link href="http://sebastienlachance.com/blog/learning-rails-assert-valid-keys/"/>
    <updated>2012-04-30T06:00:00-04:00</updated>
    <id>http://sebastienlachance.com/blog/learning-rails-assert-valid-keys</id>
    <content type="html"><![CDATA[<p>While reading the source code of <a href="https://github.com/thoughtbot/factory_girl">FactoryGirl</a>, I came accross this method and tried to find where in FactoryGirl it was defined.
Turns out it's in Rails since version 3.0 (more specifically in active_support/core_ext/hash/keys).</p>

<p>It's an instance method of the Hash class, and what it allows you to do is to throw an ArgumentError when an unknown key is found on the hash instance.</p>

<p><code>ruby valid keys
{ :name =&gt; "joe", :phone =&gt; '555-5555' }.assert_valid_keys(:name, :phone)
 =&gt; {:name=&gt;"joe",:phone=&gt;'555-5555'}  # no ArgumentError
</code></p>

<p><code>ruby missing key in hash
{ :name =&gt; "joe" }.assert_valid_keys(:name, :phone)
 =&gt; {:name=&gt;"joe"}  # no ArgumentError
</code></p>

<p><code>ruby unknown key in hash
{ :name =&gt; "joe", :phone =&gt; '555-5555' }.assert_valid_keys(:name)
ArgumentError: Unknown key: phone
</code></p>

<p><a href="http://api.rubyonrails.org/classes/Hash.html#method-i-assert_valid_keys">assert_valid_keys</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My starting Gemfile]]></title>
    <link href="http://sebastienlachance.com/blog/my-starting-gemfile/"/>
    <updated>2012-02-17T15:08:00-05:00</updated>
    <id>http://sebastienlachance.com/blog/my-starting-gemfile</id>
    <content type="html"><![CDATA[<p>This is how my Gemfile looks like at the moment. Continuous feedback with Guard and metrics to keep track on defects and best practices not used.</p>

<p><div><script src='https://gist.github.com/1855201.js?file='></script>
<noscript><pre><code>source 'https://rubygems.org'

gem 'rails', '3.2.1'
gem 'pg'
gem 'omniauth-twitter'
gem 'omniauth-facebook'
gem 'omniauth-google-oauth2'
gem 'omniauth-identity'

group :assets do
  gem 'sass-rails',   '~&gt; 3.2.3'
  gem 'coffee-rails', '~&gt; 3.2.1'
  gem 'uglifier',     '&gt;= 1.0.3'
end

gem 'jquery-rails'
gem 'skeleton-rails'
gem 'rails-backbone'
gem 'jasminerice'

gem 'rspec-rails', :group =&gt; [:development, :test]

group :development do 
  gem 'heroku'
  gem 'guard'
  gem 'guard-rspec'
  gem 'guard-jasmine'
  gem 'growl'
  gem 'metrical'
  gem 'fattr'         # for Metric_fu
  gem 'arrayfields'   # for Metric_fu
  gem 'map'           # for Metric_fu
  gem 'annotate', :git =&gt; 'git://github.com/ctran/annotate_models.git'
end

group :test do
  gem 'database_cleaner', :group =&gt; :test
  gem 'factory_girl_rails', :group =&gt; :test
end

gem 'bcrypt-ruby', '~&gt; 3.0.0'</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
</feed>
